
	배열 (Array)
	- 동일한 자료형의 순차적 자료 구조
	- 인덱스 연산자[]를 이용하여 빠른 참조 가능
	- 물리적 위치와 논리적 위치가 동일
	- 자바에서는 객체 배열을 구현한 ArrayList를 많이 활용함.
		:ArrayList -> 배열객체.. Resizable-array implementation of the List interface
		
	- 배열의 길이와 요소(element)의 개수는 동일하지 않다.
		*배열을 선언하면 개수만큼 메모리가 할당되지만, 실제 요서(데이터)가 없는 경우도 있음.
		*배열의 length 속성은 배열의 개수를 반환해주기 때문에 요소의 개수와는 다름
		*length로 인해 오류가 날수도 있음.  => length로 for문 쓰기보단... foreach문을 사용하는게 좋을듯..
	
	
	-- 배열선언
	int[] arr1 = new int[10];
	int arr2[] = new int[10];
	
	
	-- 배열 초기화
	(1) int[] numbers = new int[] {10, 20, 30};  // 개수 생략해야함
	(2) int[] numbers = {10, 20, 30};   		 // new int[] 생략 가능
	(3) int[] ids;
		ids = new int[] {10, 20, 30};			 // 선언 후 배열을 생성하는 경우는 new int[] 생략할 수 없음. 
		
		
====================================================================================================================================

	<< 객체 배열 >>
	
	- 기본 자료형 배열은 선언과 동시에 배열의 크기만큼의 메모리가 할당되지만, 
	  객체 배열의 경우엔 요소가 되는 객체의 주소가 들어갈(32bit=4byte, 64bit=8byte) 메모리만 할당되고(null) 각 요소 객체는 생성하여 저장해야함.
	  
	< 객체 배열 복사 >
	@ 얕은 복사
		- 주소값만 복사해준것이므로, 원본이든 복사본이든 어떤걸 변경하던 서로 영향을 미침
	@ 깊은 복사
		- 주소값 복사가 아닌, 각 요소들에 새 객체를 만든 후, property값만 복사함. 원본과 복사본 서로 독립된 객체를 가지므로 영향X
	  
	
	
	
	
	
	
	